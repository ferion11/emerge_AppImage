#!/bin/bash -e
HERE="$(dirname "$(readlink -f "${0}")")"

if [ "$(id -u)" != 0 ]; then
	echo "* This AppImage need to be run with root!"
	exit 1
fi
#=================================================
have_dep() {
	command -v "$1" >/dev/null 2>&1
}
check_commands() {
	for cmd in "$@"; do
		if ! have_dep "${cmd}"; then
			echo "* Your system does not have the command: ${cmd}. Please install it!"
			exit 1
		fi
	done
}
check_commands chroot mount umount unionfs
#=================================================
function cleanup {
	umount -f "${HERE}/lib/modules"
	umount -f "${HERE}/usr/src/linux"
	umount -f "${HERE}/dev/pts"
	umount -f "${HERE}/run"

	umount -f "${HERE}/tmp"
	umount -f "${HERE}/var/log"
	umount -f "${HERE}/var/cache/binpkgs"
	umount -f "${HERE}/var/cache/distfiles"
	umount -f "${HERE}/var/db/repos"

	umount -f "${HERE}/mnt/host"

	umount -f "${HERE}/proc"
	umount -f "${HERE}/sys"
	umount -f "${HERE}/dev"
}
#-------
trap cleanup EXIT
#-------
#=================================================
mount --rbind /dev "${HERE}/dev"
mount --rbind /sys "${HERE}/sys"
mount -t proc none "${HERE}/proc"

mount --rbind / "${HERE}/mnt/host"

mount -o bind,rw /var/db/repos "${HERE}/var/db/repos"
mount -o bind,rw /var/cache/distfiles "${HERE}/var/cache/distfiles"
mount -o bind,rw /var/cache/binpkgs "${HERE}/var/cache/binpkgs"
mount -o bind,rw /var/log "${HERE}/var/log"
mount -o bind,rw /tmp "${HERE}/tmp"

mount -t tmpfs -o nosuid,nodev,noexec,mode=755 none "${HERE}/run"
mount -o bind,rw /dev/pts "${HERE}/dev/pts"
mount -o bind,rw /usr/src/linux "${HERE}/usr/src/linux"
mount -o bind,rw /lib/modules "${HERE}/lib/modules"
#=================================================
chroot ${HERE} ./emerge.sh $@
#=================================================
exit 0
